DROP TABLE IF EXISTS mdl_elp_progress_report;
CREATE VIEW `mdl_elp_progress_report` AS select `mdl_elp_progress_view`.`userid` AS `userid`,`mdl_elp_progress_view`.`courseid` AS `courseid`,`getIntakeCohort`(`mdl_elp_progress_view`.`userid`,`mdl_elp_progress_view`.`courseid`) AS `intake_cohort`,`getCourseGroup`(`mdl_elp_progress_view`.`userid`,`mdl_elp_progress_view`.`courseid`,'I') AS `course_group`,`getCourseGroup`(`mdl_elp_progress_view`.`userid`,`mdl_elp_progress_view`.`courseid`,'S') AS `status_group`,if(`mdl_elp_progress_view`.`overall` regexp '^[AB]',`mdl_elp_progress_view`.`lastdate`,NULL) AS `date_completed`,if(!(`mdl_elp_progress_view`.`overall` regexp '^[AB]'),'Not Completed',if(`mdl_elp_progress_view`.`overall` regexp '^B','Ungraded',(select `l`.`letter` from (`mdl_grade_letters` `l` join `mdl_context` `c` on(`c`.`id` = `l`.`contextid`)) where `c`.`instanceid` = `mdl_elp_progress_view`.`courseid` and `l`.`lowerboundary` = (select max(`mdl_grade_letters`.`lowerboundary`) from `mdl_grade_letters` where `mdl_grade_letters`.`contextid` = `c`.`id` and `mdl_elp_progress_view`.`course_total` >= `mdl_grade_letters`.`lowerboundary`)))) AS `grade`,`mdl_elp_progress_view`.`course_total` AS `course_total`,if(`mdl_elp_progress_view`.`overall` regexp '^[AB]','Finished',`testGroupDeadline`(`mdl_elp_progress_view`.`userid`,`mdl_elp_progress_view`.`courseid`)) AS `course_status`,`mdl_elp_progress_view`.`finalassess_status` AS `final_status`,`mdl_elp_progress_view`.`finalassess_mark` AS `final_avg`,`mdl_elp_progress_view`.`finalassess_part` AS `final_score`,`mdl_elp_progress_view`.`assess_status` AS `assess_status`,`mdl_elp_progress_view`.`assess_mark` AS `assess_avg`,`mdl_elp_progress_view`.`assess_part` AS `assess_score`,`mdl_elp_progress_view`.`assign_status` AS `assign_status`,`mdl_elp_progress_view`.`assign_mark` AS `assign_avg`,`mdl_elp_progress_view`.`assign_part` AS `assign_score`,`mdl_elp_progress_view`.`webinar_status` AS `webinar_status`,`mdl_elp_progress_view`.`webinar_mark` AS `webinar_avg`,`mdl_elp_progress_view`.`webinar_part` AS `webinar_score` from `mdl_elp_progress_view` group by `mdl_elp_progress_view`.`courseid`,`mdl_elp_progress_view`.`userid`;
